---
title: "USAID Final Mission"
format: docx
execute:
  echo: false
  warning: false
  message: false
  error: false
---

```{r}
#| title: load dependencies
#| echo: false
#| message: false
#| warning: false

library(tidyverse)
library(janitor)
library(readxl)
library(googlesheets4)
library(ggthemes)
library(glamr)
library(gt)
library(patchwork)
library(gridExtra)
library(waffle)
library(scales)
library(progressr)
load_secrets()

```

```{r}
#| title: defined functions
#| echo: false
#| message: false
#| warning: false


read_disposition_sheets <- function(sheet_names, ss_url) {
  sheet_names |>
    set_names() |>
    map_dfr(
      .f = function(sheet_name) {
        df <- read_sheet(
          ss = ss_url,
          skip = 6,
          sheet = sheet_name,
          range = "A7:K"
        ) |>
          clean_names()

        expected_cols <- c("article_item", "quantity", "transfer_sale_donate_dispose", "transferred_to_donated_to")
        available_cols <- intersect(expected_cols, names(df))

        df_selected <- df |> select(all_of(available_cols))

        # Coerce all selected columns to character
        df_selected |> mutate(across(everything(), as.character))
      },
      .id = "sheet_name"
    )
}

```

```{r}
#| title: Load and munge data
#| echo: false
#| message: false
#| warning: false

# import alternative award title table
map_award_titles <- read_csv("Documents/award_titles.csv")


# fetch data from terminated awards sheet
df_terminated <- read_sheet(
  ss = "https://docs.google.com/spreadsheets/d/1LDeXGK8wUIb97ARBvKG_m2PrN7_5ImeS0J7IjVCTvTY",
  sheet = "Terminated Awards",
  skip = 1) |> 
  clean_names() |>  
  separate_wider_delim(
    period_of_performance,
    delim = "-",
    names = c("period_start", "period_end"),
    too_few = "align_start",
    too_many = "merge") |> 
  mutate(across(c(period_start, period_end), str_trim),
         tipo = "Terminado",
         award_outcome = "Terminated",
         count = row_number(),
         office_division = case_when(office_division == "REGO - Wash and Biodiversity" ~ "REGO-W/B",
                                     office_division == "REGO -Agriculture, Business & Policy" ~ "REGO-A/B/P",
                                     .default = office_division
         ),
         office = case_when(str_detect(office_division, "REGO") ~ "REGO",
                            office_division %in% c("PMI", "PEPFAR", "MNCH", "HSS") ~ "IHO",
                            .default = office_division
         ),
         period_start = if_else(
           str_detect(period_start, "^\\d{2}/\\d{4}$"),
           str_c("01/", period_start),
           period_start
         ),
         period_end = if_else(
           str_detect(period_end, "^\\d{2}/\\d{4}$"),
           str_c("01/", period_end),
           period_end
         ),
         across(c(period_start, period_end), lubridate::dmy),
         follow_on_termination_close_out_notice_sent_y_n_date = lubridate::ymd(follow_on_termination_close_out_notice_sent_y_n_date)
         ) |> 
  pivot_longer(starts_with("period_"), names_to = "period_type", values_to = "period_date") |> 
  left_join(map_award_titles,
            by = join_by(award_title)) |> 
  relocate(award_title_new, .after = award_title)


# create fetching timestamp
timestamp_df_terminated <- format(Sys.time(), "%Y-%m-%d %H:%M:%S %Z")
val_unique_awards <- df_terminated |> summarise(n = n_distinct(award_title)) |> pull()


# create values for datapoints
val_unique_awards_ca <- df_terminated |> 
  filter(award_type == "COOPERATIVE AGREEMENT") |> 
  summarise(n = n_distinct(award_title)) |> pull()
val_per_unique_awards_ca <- val_unique_awards_ca / val_unique_awards
val_per_unique_awards_ca <- percent(val_per_unique_awards_ca, accuracy = 0.1)

val_unique_awards_gr <- df_terminated |> 
  filter(award_type == "GRANT") |> 
  summarise(n = n_distinct(award_title)) |> pull()
val_per_unique_awards_gr <- val_unique_awards_gr / val_unique_awards
val_per_unique_awards_gr <- percent(val_per_unique_awards_gr, accuracy = 0.1)

val_unique_awards_to <- df_terminated |> 
  filter(award_type == "TASK ORDER CONTRACT") |> 
  summarise(n = n_distinct(award_title)) |> pull()
val_per_unique_awards_to <- val_unique_awards_to / val_unique_awards
val_per_unique_awards_to <- percent(val_per_unique_awards_to, accuracy = 0.1)


df_terminated_status <- df_terminated |> 
  mutate(value = 1) |> 
  select(current_step_status, value) |> 
  group_by(current_step_status) |> 
  summarize(value = sum(value)) |> 
  ungroup()

# fetch data from active awards sheet
df_active <- read_sheet(
  ss = "https://docs.google.com/spreadsheets/d/1LDeXGK8wUIb97ARBvKG_m2PrN7_5ImeS0J7IjVCTvTY",
  sheet = "Active Awards",
  skip = 1) |> 
  clean_names() |>  
  separate_wider_delim(
    period_of_performance,
    delim = "-",
    names = c("period_start", "period_end"),
    too_few = "align_start",
    too_many = "merge") |> 
  rename(property_disposition_plan_received_y_n_date = disposition_plan_received_y_n) |> 
  mutate(across(c(period_start, period_end), str_trim),
         tipo = "Terminado",
         award_outcome = "Active",
         count = row_number(),
         office_division = case_when(office_division == "REGO - Wash and Biodiversity" ~ "REGO-W/B",
                                     office_division == "REGO -Agriculture, Business & Policy" ~ "REGO-A/B/P",
                                     .default = office_division
         ),
         office = case_when(str_detect(office_division, "REGO") ~ "REGO",
                            office_division %in% c("PMI", "PEPFAR", "MNCH", "HSS") ~ "IHO",
                            .default = office_division
         ),
         period_start = if_else(
           str_detect(period_start, "^\\d{2}/\\d{4}$"),
           str_c("01/", period_start),
           period_start
         ),
         period_end = if_else(
           str_detect(period_end, "^\\d{2}/\\d{4}$"),
           str_c("01/", period_end),
           period_end
         ),
         across(c(period_start, period_end), lubridate::mdy)) |> 
  pivot_longer(starts_with("period_"), names_to = "period_type", values_to = "period_date") |> 
  left_join(map_award_titles,
            by = join_by(award_title)) |> 
  relocate(award_title_new, .after = award_title)

# create fetching timestamp
timestamp_df_active <- format(Sys.time(), "%Y-%m-%d %H:%M:%S %Z")
val_unique_active_awards <- df_active |> summarise(n = n_distinct(award_title)) |> pull()

# fetch data from disposition sheet
df_disposition <- read_sheet(
  ss = "https://docs.google.com/spreadsheets/d/11GUdXkqPj1wNyl-VOgijDe11ye-35La9OUnZmgG6wUE",
  sheet = "Summary Non-Expendable Property",
  skip = 0) |>
  clean_names() |>
  select(name_of_activity:comments)

# create fetching timestampe
timestamp_df_disposition <- format(Sys.time(), "%Y-%m-%d %H:%M:%S %Z")

# curate ghantt chart dataset
df_ghantt <- 
  bind_rows(
    df_active |> select(!c(date_stop_work_order_or_termination_order_received)),
    df_terminated |> select(!c(current_step_status, follow_on_termination_close_out_notice_sent_y_n_date, date_stop_work_order_or_termination_order_received))
  )


# fetch data from various sheets on asset disposition recipient (cars and motorcycles only)
url_disposition <- "https://docs.google.com/spreadsheets/d/11GUdXkqPj1wNyl-VOgijDe11ye-35La9OUnZmgG6wUE"

# Get all sheet names
sheet_names <- sheet_names(url_disposition)

# Keep only those starting with "72"
sheet_names <- sheet_names[str_starts(sheet_names, "72")]

# fetch and bind
df_recipients <- read_disposition_sheets(
  sheet_names = sheet_names, 
  ss_url = url_disposition) |> 
  bind_rows()

df_recipients2 <- df_recipients |> 
  mutate(quantity = as.numeric(quantity),
         asset_recode = case_when(
           str_detect(article_item, "ehicl") ~ "Vehicle",
           str_detect(article_item, "iatura") ~ "Vehicle",
           str_detect(article_item, "oyota") ~ "Vehicle",
           str_detect(article_item, "EHICL") ~ "Vehicle",
           str_detect(article_item, "otobik") ~ "Motorcycle",
           str_detect(article_item, "otorcycl") ~ "Motorcycle",
           TRUE ~ NA)) |> 
  filter(asset_recode %in% c("Motorcycle", "Vehicle"),
         quantity <= 1)

# df_recipients |> 
#   distinct(article_item) |> 
#   write_csv("Dataout/article_cleaning.csv", na = "")

```

![](images/usaid%20logo.png){fig-align="center" width="250"}

## Background

Following the reorganization of U.S. foreign assistance policy under the new U.S. Presidential administration, the U.S. Agency for International Development (USAID) was formally dissolved as a standalone global development agency and its functions will be consolidated under the U.S. Department of State. In Mozambique, the closure of USAID will result in the imminent termination of `r val_unique_awards` awards. A total of `r val_unique_active_awards` awards that have not been terminated will transition to the U.S. State Department that will take over management responsibilities as of July 1, 2025. Such new directives have created an urgent need to manage and document the systematic closure of USAID programs, including the disposition of assets and final reporting requirements, ensuring compliance with U.S. Government policies and a responsible wind-down of development activities. The below graphic provides an overview of the periods of performance for both active and terminated awards according to original award agreements.

```{r}
#| title: Plot ghantt chart of awards
#| echo: false
#| message: false
#| warning: false
#| fig.width: 10
#| fig.height: 9.5

df_ghantt |> 
  filter(!is.na(period_date)) |> 
  mutate(award_title_new = fct_reorder2(award_title_new, period_type, period_date)) |>
  ggplot() +
  geom_line(
    mapping = aes(x = award_title_new, y = period_date, color = award_outcome),
    linewidth = 4
  ) +
  scale_y_date(
    date_breaks = "1 year",
    date_labels = "%Y"
  ) +
  #scale_color_manual(values = custom_colors) +
  labs(
    title = "Period of Performance Timelines",
    subtitle = "Period of performance timelines for all active and terminated USAID/Mozambique awards according to original agreements.",
    caption = glue::glue("Information Extracted On: ", {timestamp_df_terminated}),
    color = NULL) +
  theme_fivethirtyeight() +
  scale_color_manual(
  values = c(
    "Terminated" = "#BFDDFF",
    "Active" = "#2057a7"
  )
) +
  coord_flip() +
theme(
  plot.background = element_rect(fill = "white", color = NA),
  panel.background = element_rect(fill = "white", color = NA),
  legend.background = element_rect(fill = "white", color = NA),
  legend.box.background = element_rect(fill = "white", color = NA),
  legend.position = "top",
  legend.justification = "center",
  legend.box.just = "left",
  legend.title = element_text(size = 12),
  legend.margin = margin(t = 5, b = -10),         # tighten space inside legend box
  plot.margin = margin(t = 10, r = 10, b = 10, l = 10),  # shrink space between legend & plot
  plot.title = element_text(size = 20, face = "bold"),
  plot.subtitle = element_text(size = 9, margin = margin(b = 0)),  # tighten subtitle spacing
  plot.caption = element_text(size = 8, face = "italic"),
  axis.text.y = element_text(size = 7)
)


```

## Summary of Terminated Award Types

To date, a total of `r val_unique_awards` USAID/Mozambique awards have been scheduled for termination. Of these, `r val_unique_awards_ca` (`r val_per_unique_awards_ca`) are Cooperative Agreements with Grants and Task Orders constituting the second and third most common award types (`r val_per_unique_awards_gr` and `r val_per_unique_awards_to` respectively).

```{r}
#| title: Plot award type data
#| echo: false
#| message: false
#| warning: false
#| fig.width: 10
#| fig.height: 5.5

df_terminated_type <- df_terminated |> 
  group_by(award_type) |> 
  summarise(
    n = n_distinct(award_title),
    .groups = "drop"
  ) |> 
  arrange(desc(n))

r <- df_terminated_type |> 
  gt() |> 
  cols_label(
    award_type = "Award Type",
    n = "Number of Awards"
  ) |> 
  tab_options(
    table.font.size = px(13)
  )


award_colors <- c(
  "COOPERATIVE AGREEMENT" = "#2057a7",
  "GRANT"                 = "#BFDDFF",
  "TASK ORDER CONTRACT"   = "#c43d4d",
  "OTHER"                 = "#FF939A",
  "CONTRACT"              = "#8980cb",
  "IDIQ CONTRACT"         = "#DFD3FF",
  "BPA CALL ORDER"        = "#e07653",
  "MNCH"                  = "#FFCAA2"
)

l <- df_terminated_type |> 
  ggplot(aes(x = reorder(award_type, n), y = n, fill = award_type)) +
  geom_col() +
  geom_text(
    aes(label = n, color = after_scale(fill)),
    position = position_dodge(width = 0.9),
    hjust = -0.4,
    size = 4
  ) +
  coord_flip() +
  scale_y_continuous(limits = c(0, 30), breaks = seq(0, 30, by = 5)) +
  scale_fill_manual(values = award_colors) +
  theme_fivethirtyeight() +
  theme(
    plot.margin = margin(t = 10, r = 10, b = 10, l = 10),
    plot.background = element_rect(fill = "white", color = NA),
    panel.background = element_rect(fill = "white", color = NA),
    plot.title = element_text(size = 20, face = "bold"),
    plot.subtitle = element_text(size = 9, margin = margin(b = 0)),
    plot.caption = element_text(size = 8, face = "italic"),
    legend.position = "none",
    axis.text.y = element_text(size = 10),
    panel.grid.major.y = element_blank(),
  )


combined_plot <- 
  l + wrap_elements(r) +
  plot_layout(widths = c(1, 1)) + 
  plot_annotation(
    title = "USAID/Mozambique Awards by Award Type",
    subtitle = "Includes all awards marked as terminated in the award tracker",
    caption = glue::glue("Information Extracted On: ", {timestamp_df_terminated}),
    theme = theme_fivethirtyeight(base_family = "sans") +
      theme(
        plot.background = element_rect(fill = "white", color = NA),
        plot.caption = element_text(size = 9, face = "italic")
      )
  )

combined_plot

```

## Summary of Asset Disposition

USAID/Mozambique has initiated a structured process to track the disposition of assets tied to awards scheduled for closure. This effort ensures compliance with federal regulations governing asset management, promotes transparency in the handover or transfer of property, and safeguards U.S. Government interests. The tracking process involves collecting detailed information on all capital and non-capital assets procured under each affected award, identifying their location, condition, and current custodianship. This data is reviewed to determine appropriate disposition actions — including transfers to other implementing partners, donations to host country institutions, or proper disposal — in alignment with USAID policy. The resulting analysis supports both accountability and informed decision-making during the closeout of these programs.

```{r}
#| title: "Table 1: Asset Disposition (selected assets)"
#| echo: false
#| message: false
#| warning: false
#| fig.width: 10
#| fig.height: 4.25

df_disposition_assets <-  df_disposition |> 
  filter(asset %in% c("Cellphone", "Vehicles", "Motorcycles", "Laptop", "Computer", "Desktop Computer")) |> 
  group_by(asset) |>
  summarise(Total = sum(total, na.rm = TRUE),
            Government = sum(government, na.rm = TRUE),
            `Other Entities` = sum(other_entities, na.rm = TRUE)) |>
  ungroup() |> 
  mutate(asset = factor(asset, levels = c("Vehicles", "Motorcycles", "Laptop", "Desktop Computer", "Cellphone")),
         asset = str_to_upper(asset)) |> 
  arrange(asset)

r <- df_disposition_assets |> 
  gt() |> 
  cols_align(
    align = "left",
    columns = "asset"
  ) |> 
  cols_label(
    asset = "Asset Type"
  ) |> 
    tab_options(
    table.font.size = px(13)
  ) |> 
  tab_caption(caption = paste("Information Extracted On:", timestamp_df_disposition))

award_colors <- c(
  "VEHICLES"           = "#2057a7",
  "MOTORCYCLES"        = "#BFDDFF",
  "LAPTOP"             = "#c43d4d",
  "DESKTOP COMPUTER"   = "#FF939A",
  "CELLPHONE"         = "#8980cb"
)

l <- df_disposition_assets |> 
  ggplot(aes(x = reorder(asset, Total), y = Total, fill = asset)) +
  geom_col() +
  geom_text(
    aes(label = Total, color = after_scale(fill)),
    position = position_dodge(width = 0.9),
    hjust = -0.4,
    size = 4
  ) +
  coord_flip() +
  scale_y_continuous(limits = c(0, 700), breaks = seq(0, 700, by = 100)) +
  scale_fill_manual(values = award_colors) +
  theme_fivethirtyeight() +
  theme(
    plot.margin = margin(t = 10, r = 10, b = 10, l = 10),
    plot.background = element_rect(fill = "white", color = NA),
    panel.background = element_rect(fill = "white", color = NA),
    plot.title = element_text(size = 20, face = "bold"),
    plot.subtitle = element_text(size = 9, margin = margin(b = 0)),
    plot.caption = element_text(size = 8, face = "italic"),
    legend.position = "none",
    axis.text.y = element_text(size = 10),
    panel.grid.major.y = element_blank(),
  )
  
combined_plot <- 
  l + wrap_elements(r) +
  plot_layout(widths = c(1, 1)) + 
  plot_annotation(
    title = "USAID/Mozambique Key Asset Disposition",
    subtitle = "Includes all assets included in the disposition tracker",
    caption = glue::glue("Information Extracted On: ", {timestamp_df_disposition}),
    theme = theme_fivethirtyeight(base_family = "sans") +
      theme(
        plot.background = element_rect(fill = "white", color = NA),
        plot.caption = element_text(size = 9, face = "italic")
      )
  )

combined_plot

```

```{r}
#| title: "Table 2: Asset Disposition by Province"
#| echo: false
#| message: false
#| fig.width: 10
#| fig.height: 6

df_disposition |> 
  filter(asset %in% c("Cellphone", "Vehicles", "Motorcycles", "Laptop", "Computer", "Desktop Computer"),
         !is.na(provinces)) |> 
  mutate(provinces = factor(provinces, levels = c(
    "Maputo City", "Gaza", "Sofala", "Manica", "Tete",
    "Zambézia", "Nampula", "Cabo Delgado", "Niassa"
  ))) |> 
  group_by(asset, provinces) |>
  summarise(Total = sum(total, na.rm = TRUE), .groups = "drop") |> 
  ggplot(aes(x = provinces, y = Total, fill = asset)) +
  geom_col(position = "dodge") +   # group bars by province
  geom_text(
    aes(label = Total, color = after_scale(fill)),  # <- color matches bar fill
    position = position_dodge(width = 0.9),
    hjust = -0.1,
    size = 3
  ) +
  coord_flip() +                   # horizontal layout
  scale_y_continuous(limits = c(0, 300), breaks = seq(0, 300, by = 100)) +
  labs(
    title = "Key Asset Distribution by Type & Province",
    subtitle = "Total distribution of key IT and mobility assets by province, disaggregated by asset type. Bars represent\n the total quantity distributed in each province.",
    caption = glue::glue("Information Extracted On: ", {timestamp_df_disposition}),
    x = NULL,
    y = "Total Value",
    fill = "Province"
  ) +
  theme_fivethirtyeight() +
  theme(
    plot.background = element_rect(fill = "white", color = NA),
    panel.background = element_rect(fill = "white", color = NA),
    legend.background = element_rect(fill = "white", color = NA),
    legend.box.background = element_rect(fill = "white", color = NA),
    legend.position = "none",
    strip.background = element_blank(),
    panel.spacing = unit(1, "lines"),  # spacing between facet panels
    panel.grid.major.x = element_line(color = "gray90", linewidth = 0.2),  # simulate vertical guides
    plot.title = element_text(size = 20, face = "bold"),
    plot.subtitle = element_text(size = 9),
    plot.caption = element_text(size = 8, face = "italic")
  ) +
  facet_wrap(~ factor(asset, levels=c('Vehicles', 'Motorcycles', 'Laptop', 'Computer', 'Desktop Computer', 'Cellphone')), nrow = 1)


```

```{r}
#| title: "Table 3: Motorcycle Disposition by Recipient"
#| echo: false
#| message: false
#| fig.width: 10
#| fig.height: 10

df_recipients2 |> 
  filter(asset_recode == "Motorcycle") |> 
  group_by(asset_recode, transferred_to_donated_to) |> 
  summarize(quantity = sum(quantity)) |> 
  ggplot(aes(x = fct_reorder(transferred_to_donated_to, quantity), y = quantity)) +
  geom_col(fill = "#2057a7") +
  coord_flip() +
  theme_fivethirtyeight() +
  labs(
    title = "Disposition of Motorcycles by Recipient",
    subtitle = "Number of motorcycles donated or transferred from terminated project by recipient")
  

```

```{r}
#| title: "Table 3: Vehicle Disposition by Recipient"
#| echo: false
#| message: false
#| fig.width: 10
#| fig.height: 10

df_recipients2 |> 
  filter(asset_recode == "Vehicle") |> 
  group_by(asset_recode, transferred_to_donated_to) |> 
  summarize(quantity = sum(quantity)) |> 
  ggplot(aes(x = fct_reorder(transferred_to_donated_to, quantity), y = quantity)) +
  geom_col(fill = "#c43d4d") +
  coord_flip() +
  theme_fivethirtyeight() +
  labs(
    title = "Disposition of Vehicles by Recipient",
    subtitle = "Number of vehicles donated or transferred from terminated project by recipient")
  

```

## Summary of Active Awards

```{r}
#| title: Active award ceilings
#| echo: false
#| message: false
#| fig.width: 10
#| fig.height: 6

df_active |>
  filter(!is.na(award_tec_a)) |>
  distinct(award_title, .keep_all = TRUE) |>
  ggplot(aes(x = fct_reorder(award_title, award_tec_a), y = award_tec_a, fill = award_title)) +
  geom_col() +
  coord_flip() +
  theme_fivethirtyeight() +
  labs(
    title = "Active Award TEC Ceilings",
    subtitle = "TEC ceilings for USAID/Mozambique active awards according to original award agreements",
    caption = glue::glue("Information Extracted On: ", {timestamp_df_active})
  ) +
  scale_y_continuous(
    limits = c(0, 300000000),
    breaks = seq(0, 300000000, by = 50000000),
    labels = scales::label_dollar(scale = 1e-6, suffix = "M")
  ) +
  theme(
    plot.margin = margin(t = 10, r = 10, b = 10, l = 10),
    plot.background = element_rect(fill = "white", color = NA),
    panel.background = element_rect(fill = "white", color = NA),
    plot.title = element_text(size = 20, face = "bold"),
    plot.subtitle = element_text(size = 9, margin = margin(b = 0)),
    plot.caption = element_text(size = 8, face = "italic"),
    legend.position = "none",
    axis.text.y = element_text(size = 10),
    panel.grid.major.y = element_blank(),
  )

  
```

## Project Close Out Status

```{r}
#| title: Graphic on Terminated Project Status
#| echo: false
#| message: false
#| fig.width: 10
#| fig.height: 6

df_terminated_status |> 
  filter(!is.na(current_step_status)) |> 
  mutate(
    status = factor(current_step_status, levels = as.character(1:16))
  ) |> 
  complete(status, fill = list(value = 0)) |> 
  mutate(
    pct = value / sum(value),
    label = paste0(value, "\n(", percent(pct, accuracy = 0.1), ")")
  ) |>
  ggplot(aes(x = status, y = value, fill = as.numeric(status))) +
  geom_col() +
  geom_text(
    aes(label = label),
    vjust = -0.5,
    size = 3.5
  ) +
  scale_fill_gradient(
    low = "red",
    high = "green",
    guide = "none"
  ) +
  labs(
    title = "Current Status of Terminated Awards",
    x = "Termination Step",
    y = "Number of awards in status bucket"
  ) +
  theme_minimal()

```

## Annexes

```{r}
#| title: "Table 2: Asset Disposition (all assets)"
#| echo: false
#| message: false

df_disposition |> 
  filter(!is.na(asset)) |> 
  group_by(asset) |>
  summarise(Total = sum(total, na.rm = TRUE),
            Government = sum(government, na.rm = TRUE),
            "Other Entities" = sum(other_entities, na.rm = TRUE)) |>
  ungroup() |> 
  arrange(desc(Total)) |> 
  gt() |> 
  tab_header(
    title = "Asset Disposition by Beneficiary (All Assets)") |> 
  cols_label(
    asset = "Asset Type") |> 
  tab_caption(caption = paste("Information Extracted On:", timestamp_df_disposition))
```
